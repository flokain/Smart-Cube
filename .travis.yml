sudo: required

language:
  - python

services:
  - docker

install:
  - sudo apt-get update
  - sudo apt-get install --no-install-recommends --no-install-suggests -y build-essential libreadline-dev libffi-dev pkg-config
  - sudo pip install pycodestyle
  # clone micropython, belyalov's fork of micropython-lib
  - git clone --recurse-submodules https://github.com/micropython/micropython.git
  - git clone https://github.com/belyalov/micropython-lib.git
  # merge required uasyncio modules
  - cp micropython-lib/uasyncio.core/uasyncio/core.py micropython-lib/uasyncio/uasyncio/core.py
  # make symlinks to required modules
  - export MDST=~/.micropython/lib/
  - mkdir -p $MDST
  - ln -s `pwd`/micropython-lib/unittest/unittest.py $MDST
  - ln -s `pwd`/micropython-lib/logging/logging.py $MDST
  - ln -s `pwd`/micropython-lib/uasyncio/uasyncio $MDST/uasyncio
  - ln -s `pwd`/tinyweb $MDST/tinyweb
  # compile/install micropython.
  - cd micropython
  - git checkout v1.12
  - sudo make -C mpy-cross
  - sudo make -C ports/unix axtls install
  - cd ..

script:
  # Run style checks
  - export TINYWEB_DIR=misc/tinyweb
  - pycodestyle --ignore=E501,W504 $TINYWEB_DIR/tinyweb/ $TINYWEB_DIR/test/
  # Run unittests
  - cd $TINYWEB_DIR
  - test/test_server.py
  # Copy modules to be frozen and compile firmware for esp8266
  - cd ../..
  - export MPORT=micropython/ports/esp8266/modules
  - cp -r $TINYWEB_DIR/tinyweb $MPORT
  - cp -r micropython-lib/uasyncio/uasyncio $MPORT
  - cp micropython-lib/logging/logging.py $MPORT
  # Copy examples - to freeze them as well
  - mkdir -p $MPORT/examples
  - cp examples/*.py $MPORT/examples
  # Compile firmware for esp8266
  - docker run -v`pwd`/micropython:/micropython arsenicus/esp-open-sdk:latest /bin/bash -c ". /.bashrc && cd /micropython/ports/esp8266 && make"
  - cp micropython/ports/esp8266/build-GENERIC/firmware-combined.bin ./firmware_esp8266-$TRAVIS_TAG.bin
  # Compile firmware for esp32
  - export MPORT=micropython/ports/esp32/modules
  - cp -r $TINYWEB_DIR/tinyweb $MPORT
  - cp -r micropython-lib/uasyncio/uasyncio $MPORT
  - cp micropython-lib/logging/logging.py $MPORT
  # Copy examples - to freeze them as well
  - mkdir -p $MPORT/examples
  - cp $TINYWEB_DIR/examples/*.py $MPORT/examples
  # Supported ESP32 SDK
  - docker run -v`pwd`/micropython:/micropython arsenicus/esp-open-sdk:latest_esp32 /bin/bash -c ". /.bashrc && cd /micropython/ports/esp32 && make"
  - cp micropython/ports/esp32/build-GENERIC/firmware.bin ./firmware_esp32-$TRAVIS_TAG.bin

deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  file:
    - firmware_esp8266-$TRAVIS_TAG.bin
    - firmware_esp32-$TRAVIS_TAG.bin
  skip_cleanup: true
  on:
    tags: true
