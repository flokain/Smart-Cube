openapi: 3.0.0
info:
  title: Smartcube API
  description: This APIis used to read and configure webhooks to be triggered by the
    sides of the cube
  contact:
    email: flokain11@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1
servers:
- url: '{protocol}://{ip}/api/v1'
  description: configure url to point to smartcube
  variables:
    ip:
      description: ip or url of cube device. make sure to
      default: 192.168.0.156
    protocol:
      description: select secure https or unsecure http connection
      default: http
      enum:
      - http
      - https
- url: https://virtserver.swaggerhub.com/flokain/smartcube/1.0.0
  description: mocking server that allways gives you a sampe response
tags:
- name: Handler
  description: configure the webhooks for the cube.
- name: State
  description: get the current State of the cube.
- name: System
  description: read, configure and reboot the cube hardware.
paths:
  /state/side:
    get:
      tags:
      - State
      summary: get the current CubeState
      operationId: state_side_get
      responses:
        "200":
          description: State found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CubeState'
        "401":
          description: Unauthorized. please login
        "403":
          description: Forbidden. Permission "State" is required.
      x-openapi-router-controller: swagger_server.controllers.state_controller
  /state/System:
    get:
      tags:
      - State
      summary: get the current SystemState
      operationId: state_system_get
      responses:
        "200":
          description: State found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemState'
        "401":
          description: Unauthorized. please login
        "403":
          description: Forbidden. Permission "State" is required.
      x-openapi-router-controller: swagger_server.controllers.state_controller
  /handler/side/{sideId}:
    get:
      tags:
      - Handler
      summary: get the current Handler for {sideId}
      operationId: handler_side_side_id_get
      parameters:
      - name: sideId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/sideId'
      responses:
        "200":
          description: item found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handler'
        "401":
          description: Unauthorized. please login
        "403":
          description: Forbidden. Permission Handler is required.
        "404":
          description: Handler for side not configured
      x-openapi-router-controller: swagger_server.controllers.handler_controller
    post:
      tags:
      - Handler
      summary: configures a Handler for side {sideId}
      description: Adds a Handler to a side
      operationId: add_side_handler
      parameters:
      - name: sideId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/sideId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Handler'
      responses:
        "201":
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handler'
        "400":
          description: invalid input, object invalid
        "401":
          description: Unauthorized. please login
        "403":
          description: Forbidden. Permission "Handler" is required.
      x-openapi-router-controller: swagger_server.controllers.handler_controller
  /handler/onchange:
    get:
      tags:
      - Handler
      summary: get the current Handler for changes of CubeState
      operationId: handler_onchange_get
      responses:
        "200":
          description: item found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handler'
        "401":
          description: Unauthorized. please login
        "403":
          description: Forbidden. Permission "Handler" is required.
        "404":
          description: not found
      x-openapi-router-controller: swagger_server.controllers.handler_controller
    post:
      tags:
      - Handler
      summary: configures a Handler for changes of CubeState
      description: Add a Handler to whenever the CubeState changes i.e. it is tilted
      operationId: handler_onchange_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Handler'
      responses:
        "201":
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handler'
        "400":
          description: invalid input, object invalid
        "401":
          description: Unauthorized. please login
        "403":
          description: Forbidden. Permission "Handler" is required.
      x-openapi-router-controller: swagger_server.controllers.handler_controller
  /System/config/wifi:
    get:
      tags:
      - System
      summary: get configured wifi(s)
      description: returns wifi
      operationId: system_config_wifi_get
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wifi'
      x-openapi-router-controller: swagger_server.controllers.system_controller
    post:
      tags:
      - System
      summary: return configured wifi
      description: returns current configuration if accepted
      operationId: system_config_wifi_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wifi'
      responses:
        "201":
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wifi'
        "401":
          description: Unauthorized. please login
        "403":
          description: Forbidden. Permission System is required.ig"
      x-openapi-router-controller: swagger_server.controllers.system_controller
  /System/reboot:
    post:
      tags:
      - System
      summary: reboots the System
      description: returns current configuration if accepted
      operationId: system_reboot_post
      responses:
        "204":
          description: device reboots now
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfig'
        "401":
          description: Unauthorized. Please login
        "403":
          description: Forbidden. Permission System is required.
        "500":
          description: unable to reboot.
      x-openapi-router-controller: swagger_server.controllers.system_controller
components:
  schemas:
    sideId:
      maximum: 6
      minimum: 1
      type: integer
      format: int8
      example: 1
      default: 1
    CubeState:
      type: object
      properties:
        sideId:
          $ref: '#/components/schemas/sideId'
        lastChange:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
      description: provides the current side up on the cube as well as time since
        when it is in that State.
      example:
        sideId: 1
        lastChange: 2017-07-21T17:32:28Z
    SystemState:
      type: object
      properties:
        timeRemaining:
          type: integer
          description: estimated remaining time of operation in seconds. -1 means
            infintely
          format: int64
          example: 60
        timePassed:
          type: integer
          description: time that has passed since device was switched on
          format: int64
          example: 10000
      description: provides all relevant and irrelevant meta data about the hardware
      example:
        timePassed: 10000
        timeRemaining: 60
    SystemConfig:
      properties:
        wifiSSID:
          type: string
          description: the SSID of the connected Wifi
          example: GLUBBE-Network
        changeDelay:
          type: integer
          description: when the cube is tilted, sensors indicate many CubeState changes.
            to mittigate the detection of those unwanted events after the cube is
            tilted it must stand still for milliseconds in changeDelay
          example: 3000
          default: 3000
      description: provides all relevant and irrelevant meta data about the hardware
      example:
        wifiSSID: GLUBBE-Network
        changeDelay: 3000
    Wifi:
      properties:
        ssid:
          type: string
          description: the SSID of the Wifi to connect to
          example: Fsociety-SSID
        password:
          type: string
          description: the password of the wifi
          writeOnly: true
          example: pa$$word-swordfish
      description: provides all relevant and irrelevant meta data about the hardware
      example:
        password: pa$$word-swordfish
        ssid: Fsociety-SSID
    Handler:
      required:
      - request
      type: object
      properties:
        request:
          $ref: '#/components/schemas/httpRequest'
        expectedResponse:
          type: integer
          example: 201
          default: 200
      description: configures a httpRequest and the expected response from that Request
        for the Handler to work as expected.
      example:
        request:
          headers:
            Authorization: Basic NzQwYzefIzZjhjYTEwMadadasd
            accept: application/json
          method: POST
          payload: sample body as string
          uri: http://my-remote-service.com/webhook-to-trigger
        expectedResponse: 201
    httpRequest:
      required:
      - uri
      type: object
      properties:
        uri:
          type: string
          format: uri
          example: http://my-remote-service.com/webhook-to-trigger
        method:
          type: string
          example: POST
          default: GET
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - HEAD
          - PATCH
          - OPTIONS
        headers:
          type: object
          additionalProperties:
            type: string
          example:
            Authorization: Basic NzQwYzefIzZjhjYTEwMadadasd
            accept: application/json
        payload:
          type: string
          example: sample body as string
      example:
        headers:
          Authorization: Basic NzQwYzefIzZjhjYTEwMadadasd
          accept: application/json
        method: POST
        payload: sample body as string
        uri: http://my-remote-service.com/webhook-to-trigger
  securitySchemes:
    oAuthSample:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
          scopes:
            read_pets: read pets in your account
            write_pets: modify pets in your account
      x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_oAuthSample
      x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_oAuthSample

