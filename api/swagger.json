{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "{protocol}://{ip}/api/v1",
    "description" : "configure url to point to smartcube",
    "variables" : {
      "ip" : {
        "default" : "192.168.0.156",
        "description" : "ip or url of cube device. make sure to"
      },
      "protocol" : {
        "description" : "select secure https or unsecure http connection",
        "enum" : [ "http", "https" ],
        "default" : "http"
      }
    }
  }, {
    "url" : "https://virtserver.swaggerhub.com/flokain/smartcube/1.0.0",
    "description" : "mocking server that allways gives you a sampe response"
  } ],
  "info" : {
    "description" : "This APIis used to read and configure webhooks to be triggered by the sides of the cube",
    "version" : "v1",
    "title" : "Smartcube API",
    "contact" : {
      "email" : "flokain11@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "Handler",
    "description" : "configure the webhooks for the cube."
  }, {
    "name" : "State",
    "description" : "get the current State of the cube."
  }, {
    "name" : "System",
    "description" : "read, configure and reboot the cube hardware."
  } ],
  "paths" : {
    "/state/side" : {
      "get" : {
        "tags" : [ "State" ],
        "summary" : "get the current CubeState",
        "responses" : {
          "200" : {
            "description" : "State found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "$ref" : "#/components/schemas/CubeState"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized. please login"
          },
          "403" : {
            "description" : "Forbidden. Permission \"State\" is required."
          }
        }
      }
    },
    "/state/System" : {
      "get" : {
        "tags" : [ "State" ],
        "summary" : "get the current SystemState",
        "responses" : {
          "200" : {
            "description" : "State found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "$ref" : "#/components/schemas/SystemState"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized. please login"
          },
          "403" : {
            "description" : "Forbidden. Permission \"State\" is required."
          }
        }
      }
    },
    "/handler/side/{sideId}" : {
      "get" : {
        "summary" : "get the current Handler for {sideId}",
        "tags" : [ "Handler" ],
        "parameters" : [ {
          "name" : "sideId",
          "required" : true,
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/sideId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Handler"
                }
              }
            }
          },
          "404" : {
            "description" : "Handler for side not configured"
          },
          "401" : {
            "description" : "Unauthorized. please login"
          },
          "403" : {
            "description" : "Forbidden. Permission Handler is required."
          }
        }
      },
      "post" : {
        "tags" : [ "Handler" ],
        "parameters" : [ {
          "name" : "sideId",
          "required" : true,
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/sideId"
          }
        } ],
        "summary" : "configures a Handler for side {sideId}",
        "operationId" : "addSideHandler",
        "description" : "Adds a Handler to a side",
        "responses" : {
          "201" : {
            "description" : "item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Handler"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "401" : {
            "description" : "Unauthorized. please login"
          },
          "403" : {
            "description" : "Forbidden. Permission \"Handler\" is required."
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Handler"
              }
            }
          }
        }
      }
    },
    "/handler/onchange" : {
      "get" : {
        "summary" : "get the current Handler for changes of CubeState",
        "tags" : [ "Handler" ],
        "responses" : {
          "200" : {
            "description" : "item found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Handler"
                }
              }
            }
          },
          "404" : {
            "description" : "not found"
          },
          "401" : {
            "description" : "Unauthorized. please login"
          },
          "403" : {
            "description" : "Forbidden. Permission \"Handler\" is required."
          }
        }
      },
      "post" : {
        "tags" : [ "Handler" ],
        "summary" : "configures a Handler for changes of CubeState",
        "description" : "Add a Handler to whenever the CubeState changes i.e. it is tilted",
        "responses" : {
          "201" : {
            "description" : "item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Handler"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "401" : {
            "description" : "Unauthorized. please login"
          },
          "403" : {
            "description" : "Forbidden. Permission \"Handler\" is required."
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Handler"
              }
            }
          }
        }
      }
    },
    "/System/config" : {
      "get" : {
        "tags" : [ "System" ],
        "summary" : "get the configuration",
        "description" : "returns current conffiguration",
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemConfig"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized. please login"
          },
          "403" : {
            "description" : "Forbidden. Permission System is required."
          }
        }
      },
      "post" : {
        "tags" : [ "System" ],
        "summary" : "set the configuration",
        "description" : "returns current configuration if accepted",
        "responses" : {
          "201" : {
            "description" : "item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemConfig"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized. please login"
          },
          "403" : {
            "description" : "Forbidden. Permission System is required."
          }
        }
      }
    },
    "/System/reboot" : {
      "post" : {
        "tags" : [ "System" ],
        "summary" : "reboots the System",
        "description" : "returns current configuration if accepted",
        "responses" : {
          "204" : {
            "description" : "device reboots now",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemConfig"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized. Please login"
          },
          "403" : {
            "description" : "Forbidden. Permission System is required."
          },
          "500" : {
            "description" : "unable to reboot."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "sideId" : {
        "type" : "integer",
        "format" : "int8",
        "minimum" : 1,
        "maximum" : 6,
        "example" : 1,
        "default" : 1
      },
      "CubeState" : {
        "description" : "provides the current side up on the cube as well as time since when it is in that State.",
        "type" : "object",
        "properties" : {
          "sideId" : {
            "$ref" : "#/components/schemas/sideId"
          },
          "lastChange" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2017-07-21T17:32:28Z"
          }
        }
      },
      "SystemState" : {
        "description" : "provides all relevant and irrelevant meta data about the hardware",
        "type" : "object",
        "properties" : {
          "timeRemaining" : {
            "description" : "estimated remaining time of operation in seconds. -1 means infintely",
            "type" : "integer",
            "format" : "int64",
            "example" : 60
          },
          "timePassed" : {
            "description" : "time that has passed since device was switched on",
            "type" : "integer",
            "format" : "int64",
            "example" : 10000
          }
        }
      },
      "SystemConfig" : {
        "description" : "provides all relevant and irrelevant meta data about the hardware",
        "properties" : {
          "wifiSSID" : {
            "description" : "the SSID of the connected Wifi",
            "type" : "string",
            "example" : "GLUBBE-Network"
          },
          "changeDelay" : {
            "type" : "integer",
            "description" : "when the cube is tilted, sensors indicate many CubeState changes. to mittigate the detection of those unwanted events after the cube is tilted it must stand still for milliseconds in changeDelay",
            "example" : 3000,
            "default" : 3000
          }
        }
      },
      "Handler" : {
        "description" : "configures a httpRequest and the expected response from that Request for the Handler to work as expected.",
        "type" : "object",
        "required" : [ "request" ],
        "properties" : {
          "request" : {
            "$ref" : "#/components/schemas/httpRequest"
          },
          "expectedResponse" : {
            "type" : "integer",
            "default" : 200,
            "example" : 201
          }
        }
      },
      "httpRequest" : {
        "type" : "object",
        "required" : [ "uri" ],
        "properties" : {
          "uri" : {
            "type" : "string",
            "format" : "uri",
            "example" : "http://my-remote-service.com/webhook-to-trigger"
          },
          "method" : {
            "type" : "string",
            "default" : "GET",
            "example" : "POST",
            "enum" : [ "GET", "POST", "PUT", "DELETE", "HEAD", "PATCH", "OPTIONS" ]
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "Authorization" : "Basic NzQwYzefIzZjhjYTEwMadadasd",
              "accept" : "application/json"
            }
          },
          "payload" : {
            "type" : "string",
            "example" : "sample body as string"
          }
        }
      }
    },
    "securitySchemes" : {
      "oAuthSample" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "https://accounts.google.com/o/oauth2/v2/auth",
            "scopes" : {
              "read_pets" : "read pets in your account",
              "write_pets" : "modify pets in your account"
            }
          }
        }
      }
    }
  }
}